BIN = ./node_modules/.bin

lint: # lint
  $(BIN)/shellcheck runfile.sh

man: # generate/update man page from README
  sed '1,/^Usage$$/d' README.md \
  | sed '1s/^/DESCRIPTION\\nBasic usage:\n/' \
  | $(BIN)/marked-man --name=runfile.sh \
  | sed -E 's/^(..Brunfile.sh)/\1 – Language-agnostic project task runner built on the ubiquitous Make./' \
  | tr '\n' '\r' \
  | sed -E 's/\([^\)]*\)//g' \
  | tr '\r' '\n' > ./man/run.1

release: # publish a new release (with confirmation)
  npm pack && tar -xvzf *.tgz && rm -rf package *.tgz \
  && echo $'\n'\"Press ENTER to publish the files above · CTRL+C to cancel · node $( node -v ) · npm $( npm -v )\"$'\n\n' \
  && head -n 1 >/dev/null && npm publish

releasenext: # publish a new pre-release (with confirmation)
  npm pack && tar -xvzf *.tgz && rm -rf package *.tgz \
  && echo $'\n'\"Press ENTER to publish the files above (tag=next) · CTRL+C to cancel · node $( node -v ) · npm $( npm -v )\"$'\n\n' \
  && head -n 1 >/dev/null && npm publish --tag next

test: # test
  if [[ "$(@)" =~ ^[0-9]+$$ ]]
  then
    run test-by-index "$(@)"
  elif [[ "$(@)" =~ ^(2space|3space|4space|8space|tabbed|compact|nodesc)$$ ]]
  then
    run test-by-directory "$(@)"
  elif [[ -n "$(@)" ]]
  then
    run test-by-substring "$(@)"
  else
    run test-all
  fi

test-all: lint # run all tests
  for runfile in tests/*/Runfile
  do
    echo -ne "$$( tput smul )$$( tput bold )$${runfile}$$( tput sgr0 ) -> "
    TEST_RUNFILE="$${runfile}" \
    $(BIN)/bats --jobs 16 --no-parallelize-across-files tests/test.bats
  done

test-by-directory: lint # run all tests in test directory
  echo -ne "$$( tput smul )$$( tput bold )tests/$(@)/Runfile$$( tput sgr0 ) -> "
  TEST_RUNFILE="tests/$(@)/Runfile" \
  $(BIN)/bats --jobs 16 --no-parallelize-across-files tests/test.bats

test-by-index: lint # run test case at index
  for runfile in tests/*/Runfile
  do
    echo -ne "$$( tput smul )$$( tput bold )$${runfile}$$( tput sgr0 ) -> "
    TEST_RUNFILE="$${runfile}" \
    $(BIN)/bats -f "$$( grep @test ./tests/test.bats | head -$(1) | tail -1 | cut -d' ' -f3- | cut -d'"' -f1 )$$" ./tests/test.bats
  done

test-by-substring: lint # run test cases matching substring
  for runfile in tests/*/Runfile
  do
    echo -ne "$$( tput smul )$$( tput bold )$${runfile}$$( tput sgr0 ) -> "
    TEST_RUNFILE="$${runfile}" \
    $(BIN)/bats -f "$(@)" tests/test.bats
  done

